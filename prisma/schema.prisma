generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  quiz Quiz[]
  Like Like[]

  @@map("users")
}

model Category {
  id    Int    @id @default(autoincrement())
  title String @unique
  quiz  Quiz[]

  @@map("categories")
}

model Quiz {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  difficulty  Difficulty @default(EASY)
  attempts    Int        @default(0)
  endings     Int        @default(0)
  categoryId  Int        @db.Integer
  userId      Int        @db.Integer
  category    Category   @relation(fields: [categoryId], references: [id])
  user        User       @relation(fields: [userId], references: [id])
  questions   Question[]
  Historic    Historic[]
  Like        Like[]

  @@map("quizzies")
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Question {
  id       Int      @id @default(autoincrement())
  quizId   Int
  question String
  response String
  quiz     Quiz     @relation(fields: [quizId], references: [id])
  answers  Answer[]

  @@map("questions")
}

model Historic {
  id        Int      @id @default(autoincrement())
  quizId    Int
  playerId  Int
  createdAt DateTime @default(now())
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  answers   Answer[]

  @@map("historic")
}

model Answer {
  id         Int      @id @default(autoincrement())
  historicId Int
  questionId Int
  response   String
  createdAt  DateTime @default(now())
  question   Question @relation(fields: [questionId], references: [id])
  historic   Historic @relation(fields: [historicId], references: [id])

  @@map("answers")
}

model Like {
  id         Int      @id @default(autoincrement())
  userId     Int
  quizId     Int
  likeStatus Boolean
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  quiz       Quiz     @relation(fields: [quizId], references: [id])

  @@map("likes")
}
